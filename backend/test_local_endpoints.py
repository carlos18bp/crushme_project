"""
Script de prueba para los endpoints locales optimizados
"""
import sys
import os
import django

# Setup Django
sys.path.append('/home/cerrotico/work/crushme_project/backend')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'crushme_project.settings')
django.setup()

from crushme_app.models import WooCommerceProduct, WooCommerceCategory, TranslatedContent
from crushme_app.utils.translation_helpers import get_products_list, get_translated_category

print("üß™ TESTING LOCAL OPTIMIZED ENDPOINTS\n")
print("=" * 60)

# Test 1: Productos sincronizados
print("\n1Ô∏è‚É£ TEST: Productos sincronizados")
total_products = WooCommerceProduct.objects.filter(status='publish').count()
print(f"   ‚úÖ Total productos publicados: {total_products}")

# Test 2: Categor√≠as sincronizadas
print("\n2Ô∏è‚É£ TEST: Categor√≠as sincronizadas")
total_categories = WooCommerceCategory.objects.count()
print(f"   ‚úÖ Total categor√≠as: {total_categories}")

# Test 3: Traducciones disponibles
print("\n3Ô∏è‚É£ TEST: Traducciones disponibles")
total_translations = TranslatedContent.objects.count()
print(f"   ‚úÖ Total traducciones: {total_translations}")
by_type = TranslatedContent.objects.values('content_type').distinct().count()
print(f"   ‚úÖ Tipos de contenido traducido: {by_type}")

# Test 4: Obtener productos con traducci√≥n (espa√±ol)
print("\n4Ô∏è‚É£ TEST: Obtener productos en espa√±ol")
products_qs = WooCommerceProduct.objects.filter(status='publish')[:5]
products_es = get_products_list(products_qs, target_language='es', include_stock=False)
print(f"   ‚úÖ Productos obtenidos: {len(products_es)}")
if products_es:
    print(f"   üì¶ Primer producto: {products_es[0]['name']}")
    print(f"      Precio: ${products_es[0]['price']}")
    print(f"      Categor√≠a: {products_es[0].get('category', 'N/A')}")

# Test 5: Obtener productos con traducci√≥n (ingl√©s)
print("\n5Ô∏è‚É£ TEST: Obtener productos en ingl√©s")
products_en = get_products_list(products_qs, target_language='en', include_stock=False)
print(f"   ‚úÖ Productos obtenidos: {len(products_en)}")
if products_en:
    print(f"   üì¶ Primer producto: {products_en[0]['name']}")
    print(f"      (Original: {products_es[0]['name']})")

# Test 6: Categor√≠as con traducci√≥n
print("\n6Ô∏è‚É£ TEST: Categor√≠as con traducci√≥n")
cat = WooCommerceCategory.objects.first()
if cat:
    cat_es = get_translated_category(cat, 'es')
    cat_en = get_translated_category(cat, 'en')
    print(f"   ‚úÖ Categor√≠a ES: {cat_es['name']}")
    print(f"   ‚úÖ Categor√≠a EN: {cat_en['name']}")

# Test 7: Productos por categor√≠a
print("\n7Ô∏è‚É£ TEST: Productos por categor√≠a")
cat_134 = WooCommerceCategory.objects.filter(wc_id=134).first()
if cat_134:
    products_in_cat = WooCommerceProduct.objects.filter(
        categories__wc_id=134,
        status='publish'
    ).count()
    print(f"   ‚úÖ Categor√≠a: {cat_134.name}")
    print(f"   ‚úÖ Productos en categor√≠a: {products_in_cat}")

# Test 8: Productos destacados (trending)
print("\n8Ô∏è‚É£ TEST: Productos destacados")
trending = WooCommerceProduct.objects.filter(
    status='publish',
    stock_status='instock'
).order_by('-rating_count', '-average_rating')[:8]
print(f"   ‚úÖ Productos trending: {trending.count()}")
if trending:
    print(f"   ‚≠ê Top producto: {trending[0].name}")
    print(f"      Rating: {trending[0].average_rating} ({trending[0].rating_count} reviews)")

print("\n" + "=" * 60)
print("‚úÖ TESTS COMPLETADOS\n")

# Resumen
print("üìä RESUMEN:")
print(f"   ‚Ä¢ Productos: {total_products}")
print(f"   ‚Ä¢ Categor√≠as: {total_categories}")
print(f"   ‚Ä¢ Traducciones: {total_translations}")
print(f"   ‚Ä¢ Estado: Sistema listo para usar ‚úÖ")

# Verificar si hay traducciones pendientes
if total_translations < (total_products + total_categories) * 2:
    print(f"\n‚ö†Ô∏è  NOTA: Traducciones a√∫n en proceso")
    print(f"   ‚Ä¢ Esperadas aprox: ~{(total_products + total_categories) * 2}")
    print(f"   ‚Ä¢ Actuales: {total_translations}")
    print(f"   ‚Ä¢ Faltantes: ~{(total_products + total_categories) * 2 - total_translations}")
else:
    print(f"\nüéâ Todas las traducciones completadas!")
