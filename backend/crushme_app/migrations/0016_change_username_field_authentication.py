# Generated by Django 5.1.5 on 2025-10-27 07:52

from django.db import migrations, models
import random
import string


def generate_username_for_null_users(apps, schema_editor):
    """
    Generate unique usernames for users that have null username.
    Uses format: user_{random_string}
    """
    User = apps.get_model('crushme_app', 'User')
    users_without_username = User.objects.filter(username__isnull=True)
    
    for user in users_without_username:
        # Generate a unique username based on email or random string
        if user.email:
            base_username = user.email.split('@')[0][:20]
        else:
            base_username = 'user'
        
        # Ensure uniqueness by adding random suffix if needed
        username = base_username
        counter = 1
        while User.objects.filter(username=username).exists():
            random_suffix = ''.join(random.choices(string.ascii_lowercase + string.digits, k=6))
            username = f"{base_username}_{random_suffix}"
            counter += 1
            if counter > 100:  # Safety limit
                break
        
        user.username = username
        user.save()


class Migration(migrations.Migration):

    dependencies = [
        ('crushme_app', '0015_change_color_to_action_in_feed'),
    ]

    operations = [
        # First, run data migration to populate null usernames
        migrations.RunPython(
            generate_username_for_null_users,
            reverse_code=migrations.RunPython.noop,
        ),
        # Then alter the field to make it non-nullable
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(
                help_text='Unique username for authentication and display purposes.', 
                max_length=30, 
                unique=True, 
                verbose_name='Username'
            ),
        ),
    ]
