# Generated by Django 5.1.5 on 2025-09-24 20:04

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import django_attachments.fields
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_attachments', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email Address')),
                ('first_name', models.CharField(max_length=60, verbose_name='First Name')),
                ('last_name', models.CharField(max_length=60, verbose_name='Last Name')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Shopping Cart',
                'verbose_name_plural': 'Shopping Carts',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.CharField(help_text='Unique order identifier', max_length=32, unique=True, verbose_name='Order Number')),
                ('total', models.DecimalField(decimal_places=2, help_text='Total order amount', max_digits=10, verbose_name='Total Amount')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('shipped', 'Shipped'), ('delivered', 'Delivered'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20, verbose_name='Order Status')),
                ('shipping_address', models.TextField(help_text='Complete shipping address', verbose_name='Shipping Address')),
                ('shipping_city', models.CharField(blank=True, max_length=100, verbose_name='Shipping City')),
                ('shipping_state', models.CharField(blank=True, max_length=100, verbose_name='Shipping State/Province')),
                ('shipping_postal_code', models.CharField(blank=True, max_length=20, verbose_name='Postal Code')),
                ('shipping_country', models.CharField(default='United States', max_length=100, verbose_name='Country')),
                ('phone_number', models.CharField(blank=True, max_length=20, verbose_name='Phone Number')),
                ('notes', models.TextField(blank=True, help_text='Additional notes or instructions', verbose_name='Order Notes')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('shipped_at', models.DateTimeField(blank=True, null=True, verbose_name='Shipped At')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Delivered At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Order',
                'verbose_name_plural': 'Orders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PasswordCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=6, validators=[django.core.validators.RegexValidator(code='invalid_code', message='Code must be 6 digits', regex='^\\d{6}$')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('used', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_codes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Password Code',
                'verbose_name_plural': 'Password Codes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='The name of the product', max_length=200, verbose_name='Product Name')),
                ('description', models.TextField(help_text='Detailed description of the product', verbose_name='Description')),
                ('price', models.DecimalField(decimal_places=2, help_text='Product price in USD', max_digits=10, verbose_name='Price')),
                ('category', models.CharField(choices=[('electronics', 'Electronics'), ('clothing', 'Clothing'), ('books', 'Books'), ('home_garden', 'Home & Garden'), ('sports', 'Sports & Outdoors'), ('toys', 'Toys & Games'), ('beauty', 'Beauty & Personal Care'), ('automotive', 'Automotive'), ('food', 'Food & Beverages'), ('health', 'Health & Wellness'), ('jewelry', 'Jewelry & Accessories'), ('music', 'Music & Instruments'), ('art', 'Art & Crafts'), ('office', 'Office Supplies'), ('pet', 'Pet Supplies'), ('other', 'Other')], default='other', help_text='Product category', max_length=50, verbose_name='Category')),
                ('stock_quantity', models.PositiveIntegerField(default=0, help_text='Available quantity in stock', verbose_name='Stock Quantity')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the product is available for purchase', verbose_name='Is Active')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('gallery', django_attachments.fields.GalleryField(help_text='Image gallery for the product', on_delete=django.db.models.deletion.CASCADE, related_name='products_with_attachment', to='django_attachments.library', verbose_name='Product Gallery')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit at the time of purchase', max_digits=10, verbose_name='Unit Price')),
                ('product_name', models.CharField(help_text='Product name at the time of purchase', max_length=200, verbose_name='Product Name (at purchase)')),
                ('product_description', models.TextField(help_text='Product description at the time of purchase', verbose_name='Product Description (at purchase)')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='crushme_app.order', verbose_name='Order')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='crushme_app.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Quantity')),
                ('unit_price', models.DecimalField(decimal_places=2, help_text='Price per unit at the time of adding to cart', max_digits=10, verbose_name='Unit Price')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='crushme_app.cart', verbose_name='Cart')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cart_items', to='crushme_app.product', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Cart Item',
                'verbose_name_plural': 'Cart Items',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the wishlist', max_length=200, verbose_name='Wishlist Name')),
                ('description', models.TextField(blank=True, help_text='Optional description of the wishlist', verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the wishlist is active', verbose_name='Is Active')),
                ('unique_link', models.UUIDField(default=uuid.uuid4, help_text='UUID for public sharing of the wishlist', unique=True, verbose_name='Unique Link')),
                ('shipping_data', models.JSONField(blank=True, default=dict, help_text='JSON data containing shipping information (name, address, phone, email)', verbose_name='Shipping Data')),
                ('is_public', models.BooleanField(default=False, help_text='Whether the wishlist can be viewed by others via link', verbose_name='Is Public')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlists', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Wish List',
                'verbose_name_plural': 'Wish Lists',
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='FavoriteWishList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_wishlists', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='crushme_app.wishlist', verbose_name='Wishlist')),
            ],
            options={
                'verbose_name': 'Favorite Wishlist',
                'verbose_name_plural': 'Favorite Wishlists',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WishListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, help_text='Optional notes about this item', verbose_name='Notes')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], default='medium', max_length=10, verbose_name='Priority')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to='crushme_app.product', verbose_name='Product')),
                ('wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='crushme_app.wishlist', verbose_name='Wishlist')),
            ],
            options={
                'verbose_name': 'Wishlist Item',
                'verbose_name_plural': 'Wishlist Items',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['user', '-created_at'], name='crushme_app_user_id_9c6769_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['status'], name='crushme_app_status_5f4bc6_idx'),
        ),
        migrations.AddIndex(
            model_name='order',
            index=models.Index(fields=['order_number'], name='crushme_app_order_n_94a0cf_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='crushme_app_categor_5f076d_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_active'], name='crushme_app_is_acti_a04fe4_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at'], name='crushme_app_created_cadc12_idx'),
        ),
        migrations.AddIndex(
            model_name='orderitem',
            index=models.Index(fields=['order', 'product'], name='crushme_app_order_i_0d39ac_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='orderitem',
            unique_together={('order', 'product')},
        ),
        migrations.AddIndex(
            model_name='cartitem',
            index=models.Index(fields=['cart', 'product'], name='crushme_app_cart_id_3c131c_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cartitem',
            unique_together={('cart', 'product')},
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['user', '-created_at'], name='crushme_app_user_id_2f7f12_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['unique_link'], name='crushme_app_unique__4ecd04_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlist',
            index=models.Index(fields=['is_public'], name='crushme_app_is_publ_a6a02c_idx'),
        ),
        migrations.AddIndex(
            model_name='favoritewishlist',
            index=models.Index(fields=['user', '-created_at'], name='crushme_app_user_id_6f43cd_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='favoritewishlist',
            unique_together={('user', 'wishlist')},
        ),
        migrations.AddIndex(
            model_name='wishlistitem',
            index=models.Index(fields=['wishlist', 'product'], name='crushme_app_wishlis_1932bd_idx'),
        ),
        migrations.AddIndex(
            model_name='wishlistitem',
            index=models.Index(fields=['priority'], name='crushme_app_priorit_518097_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='wishlistitem',
            unique_together={('wishlist', 'product')},
        ),
    ]
